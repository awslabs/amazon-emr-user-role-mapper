#!/bin/bash

#
# Amazon EMR
#
# Copyright 2020, Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Amazon Software License (the "License").
# You may not use this file except in compliance with the License.
# A copy of the License is located at
#
#   http://aws.amazon.com/asl/
#
# or in the "license" file accompanying this file. This file is distributed
# on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language governing
# permissions and limitations under the License.
#

### BEGIN INIT INFO
# Provides:          emr-user-role-mapper
# Required-Start:    $remote_fs $syslog $network
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# chkconfig will override the values set by LSB init script
# chkconfig:         2345 99 01
# Short-Description: URM
# Description:       EMR process for mapping users to AWS IAM Roles.
### END INIT INFO

. /lib/lsb/init-functions

set -e -x

PID_FILE=/emr/userrolemapper/run/userrolemapper.pid

function start {
    echo "(console) $(date '+%Y-%m-%d %H:%M:%S') EMR UserRoleMapper start called!" > /dev/console

    mkdir -p /emr/user-role-mapper/{run,log,local,data}
    chown -R userrolemapper.hadoop /emr/user-role-mapper

    /sbin/start-stop-daemon --start  --pidfile $PID_FILE  --verbose --exec /usr/bin/userrolemapper
    sleep 5

    echo "(console) $(date '+%Y-%m-%d %H:%M:%S') Listing currently running userrolemapper: " > /dev/console
    echo `ps -efww | grep -i userrolemapper`
}

function stop {
    echo "(console) $(date '+%Y-%m-%d %H:%M:%S') EMR UserRoleMapper stop called!" > /dev/console
    /sbin/start-stop-daemon --stop --pidfile $PID_FILE --verbose
}

function status {
    if [ -e $PID_FILE ] && ps --pid $(cat $PID_FILE) > /dev/null 2>&1 ; then
        log_warning_msg "Running"
        exit 0
    else
        log_warning_msg "Not Running"
        exit 3
    fi
}

case $1 in
    'start' )
        start
        ;;
    'stop' )
        stop
        ;;
    'restart' )
        stop
        start
        ;;
    'status' )
        status
        ;;
    *)
     echo "usage: `basename $0` {start|stop|status}"
esac

exit 0